if params[:dom_id] && !params[:t_url]
  if @node.v_status != @v_status_before_update
    # version status changed: better reload page so that the user is informed
    page << "window.location.href = window.location.href;"
  else
    attribute = (params[:node].keys - ['v_status'])[0]
    if params[:zazen] == 'true'
      page.replace_html params[:dom_id], "<span class='zazen_edit'>#{link_to_remote(_('edit'), :url => edit_node_path(@node[:zip]) + "?attribute=#{attribute}&dom_id=#{params[:dom_id]}#{params[:publish] ? "&publish=#{params[:publish]}" : ''}&zazen=true", :method => :get)}</span>" + zazen(params[:node][attribute])
    else
      page.replace_html params[:dom_id], link_to_remote(params[:node][attribute], :url => edit_node_path(@node[:zip]) + "?attribute=#{attribute}&dom_id=#{params[:dom_id]}", :method => :get)
    end
  end
elsif upd = params[:drive]
  if ['parent', 'dates', 'groups', 'links'].include?(upd)
    if @errors || !@node.errors.empty?
      page.replace_html "#{upd}_errors", :inline => @errors ? render_errors : error_messages_for(:node, :object => @node)
    else
      page.replace upd, :partial => upd
      page.replace 'flash_messages', :inline => flash_messages(:page => page)
      page.visual_effect :highlight, upd
    end
  else
    flash['error'] = "unknown 'drive' parameter #{upd.inspect}"
    page.replace 'flash_messages', :inline => flash_messages(:page => page)
  end
else
  update_page_content(page, @node)
end