default:
  context:
    lang: 'en'
    visitor: 'anon'
    node: 'status'

set_tags:
  src: "<r:project><r:show attr='title'/>: <r:set_tags><r:each join=', '><r:show attr='title'/></r:each></r:set_tags></r:project>"
  res: "Clean Water project: Art"

documents:
  context:
    node: 'nature'
    visitor: ant
  src: "<r:documents><r:each join=', '><r:show attr='title'/></r:each></r:documents>"
  res: "Autumn Tree, Forest"

documents_only:
  context:
    node: 'nature'
    visitor: ant
  src: "<r:documents where='kpath not like \"NDI%\"'><r:each join=', '><r:show attr='title'/></r:each></r:documents>"
  res: "Forest"

images:
  context:
    node: 'wiki'
  src: "<r:images><r:each join=', '><r:show attr='title'/></r:each></r:images>"
  res: "bird, flower"

icon:
  context:
    node: 'cleanWater'
  src: "<r:icon do='title'/>"
  tem: "/ORDER BY links.id DESC/"
  res: "it's a lake"

pages:
  context:
    node: 'cleanWater'
  src: "<r:pages><r:each join=', '><r:show attr='title'/></r:each></r:pages>"
  res: "Keeping things clean !, status title"

root:
  src: "<r:root do='title'/>"
  tem: "<% if var1 = visitor.site.root_node %><%= var1.prop['title'] %><% end %>"
  res: 'Zena the wild CMS'

root_should_be_a_project:
  src: "<r:root do='hot' do='title'/>"
  tem: "/root_node.*SELECT.*var2\.prop\['title'\]/"
  
notes:
  context:
    node: 'cleanWater'
  src: "<r:notes><r:each join=', '><r:show attr='title'/></r:each></r:notes>"
  res: "parc opening"

blog_with_news:
  context:
    node: 'zena'
    class: Project
  src: "<r:notes or='news' do='each' join=', ' do='title'/>"
  res: "parc opening, zena enhancements"

blog_with_bad_relation:
  context:
    node: 'zena'
  src: "<r:notes or='whatever' do='each' join=', ' do='title'/>"
  res: "/Unknown relation 'whatever'/"

pages_do_syntax:
  src: "<ol do='pages where title like \"c%\" in site'><li do='each' do='title'/></ol>"
  res: "<ol><li>Clean Water project</li><li>Collections</li></ol>"

pages_limit:
  context:
    node: 'cleanWater'
  src: "<r:pages limit='2' order='title DESC'><r:each join=', '><r:show attr='title'/></r:each></r:pages>"
  res: "status title, Keeping things clean !"

pages_random:
  context:
    node: 'cleanWater'
  src: "<r:pages limit='3' order='random'><r:each join=', '><r:show attr='title'/></r:each></r:pages>"
  tem: "/ORDER BY (RAND|random)/"

nodes_in_project:
  src: "<r:nodes in='project' limit='2'><r:each join=', '><r:show attr='title'/></r:each></r:nodes>"
  res: "it's a lake, Keeping things clean !"

nodes_in_project_stored:
  src: "<r:void set_foo='this'><r:node where='id = 29 in site'>from <r:show attr='title'/>, look at <r:foo do='title'/>: <r:foo do='pages in project' do='each' join=', ' do='title'/></r:node></r:void>"
  res: "from a wiki with Zena, look at status title: Keeping things clean !, status title"

nodes_in_site:
  src: "<r:nodes in='site' limit='3'><r:each join=', ' do='show' attr='title'/></r:nodes>"
  res: "a wiki with Zena, Art, bird"

context:
  src: "<r:context select='nodes' in='site' limit='3'><r:each join=', ' do='show' attr='title'/></r:context>"
  res: "a wiki with Zena, Art, bird"

author_visitor:
  context:
    visitor: ant
  src: "<r:pages in='site' where='user_id = #{visitor.id}' limit='5'><r:each join=', ' do='show' attr='title'/></r:pages>"
  res: "My Life, Nature, status title"

author:
  src: "my master: <r:author><r:name/> <r:first_name/></r:author> my version master: <r:version do='author'><r:name/> <r:first_name/></r:version>"
  tem: "/var1 = @node.author.*var1 = @node.version.*var2 = var1.author/"
  res: "my master: Invicta Solenopsis my version master: Invicta Solenopsis"

public_readable_link:
  src: "<r:show attr='set_tag_ids'/>"
  tem: '<%= h @node.rel["set_tag"].try(:other_zips) %>'

public_readable_link_for:
  src: "<r:show attr='hot_for_ids'/>"
  tem: '<%= h @node.rel["hot_for"].try(:other_zips) %>'
  res: '21'

public_readable_link_id:
  src: "<r:show attr='icon_id'/>"
  tem: '<%= @node.rel["icon"].try(:other_zip) %>'

node_id:
  old_src: "I (<r:show attr='title'/>) know: <r:context select='12'><r:show attr='title'/> with <r:children><span do='each' join=', '><r:show attr='title'>child</r:show></span></r:children></r:context>"
  src: "I (<r:show attr='title'/>) know: <r:node where='id = 12 in site'><r:show attr='title'/> with <r:children><span do='each' join=', '><r:show attr='title'>child</r:show></span></r:children></r:node>"
  res: "I (status title) know: people with <span>Panthera Leo Verneyi</span>, <span>Panthera Tigris Sumatran</span>, <span>Solenopsis Invicta</span>, <span>Mr nobody</span>"

context_root:
  src: "<r:context select='root'><r:show attr='title'/></r:context>"
  res: "Zena the wild CMS"

parent:
  src: "<r:parent do='title'/>"
  tem: "<% if var1 = @node.parent %><%= var1.prop['title'] %><% end %>"
  res: "Clean Water project"

parent_no_parent:
  src: "result=<r:root><r:parent><r:show attr='title'/></r:parent></r:root>="
  res: "result=="

node_not_found:
  src: "result=<r:node where='1 eq 2'>this is something</r:node>="
  res: "result=="

node_not_found_else:
  src: "result=<div do='node where 1 eq 2'><r:link/><r:else class='error'>not found</r:else></div>="
  res: "result=<div class='error'>not found</div>="

elsif_in_node_context:
  context:
    visitor: lion
  src: "result=<div do='node where 1 eq 2'><r:link/><r:elsif eval='can_write?'>add something</r:elsif><r:else class='error'>not found</r:else></div>="
  res: "result=<div>add something</div>="

children_else_block:
  src: "<r:children>I am a parent !<r:else>I am not tired.</r:else></r:children>"
  res: "I am not tired."

each_not_in_list:
  src: "<r:each><r:show attr='title'/></r:each>"
  res: "status title"

hot_else_block:
  context:
    class: Project
  src: "<div do='hot'>I am hot<r:else>I am not</r:else> funny</div>"
  res: "<div>I am not</div>"

hot_not_else_block:
  context:
    node: 'cleanWater'
    class: Project
  src: "<r:hot>I am hot<r:else>I am not</r:else> funny</r:hot>"
  res: "I am hot funny"

children_else:
  src: "<r:children find='first' where='title like \"%asdfg\"' else='this'><r:show attr='title'/></r:children>"
  res: "status title"

hot_else:
  context:
    class: Project
  src: "<div do='hot' else='project'><r:show attr='title'/></div>"
  res: "<div>Clean Water project</div>"

hot_else_query:
  context:
    class: Project
  src: "<div do='hot' else='node where title like \"%wiki%\" in site'><r:show attr='title'/></div>"
  res: "<div>a wiki with Zena</div>"

updated_today:
  # date set in ZafuCompilerTest
  src: "<r:pages in='site' updated='today' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='updated_at.day = now.day' do='each' join=', ' do='show' attr='title'/>"
  res: "Art, status title"

upcoming_events:
  # date set in ZafuCompilerTest
  src: "<r:pages in='site' log='upcoming' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='log_at gt now' do='each' join=', ' do='show' attr='title'/>"
  res: "people"

in_7_days:
  # date set in ZafuCompilerTest
  old_src: "<r:pages in='site' log='+7days' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='log_at gt now and log_at lt now + 7 days' do='each' join=', ' do='show' attr='title'/>"
  res: "Clean Water project, projects list"

logged_7_days_ago:
  # date set in ZafuCompilerTest
  old_src: "<r:pages in='site' log='-7days' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='log_at gt now - 7 days and log_at lt now' do='each' join=', ' do='show' attr='title'/>"
  res: "Clean Water project, projects list"

around_7_days:
  # date set in ZafuCompilerTest
  old_src: "<r:pages in='site' log='7days' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='log_at gt now - 7 days and log_at lt now + 7 days' do='each' join=', ' do='show' attr='title'/>"
  res: "Art, Clean Water project, projects list, status title"

in_37_hours:
  # date set in ZafuCompilerTest
  old_src: "<r:pages in='site' log='+37hours' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='log_at gt now and log_at lt now + 37 hours' do='each' join=', ' do='show' attr='title'/>"
  res: "Art, Clean Water project"

this_week:
  # date set in ZafuCompilerTest
  old_src: "<r:pages in='site' event='week' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='event_at.week = now.week' do='each' join=', ' do='show' attr='title'/>"
  res: "Art, projects list"

this_month:
  # date set in ZafuCompilerTest
  old_src: "<r:pages in='site' event='month' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='event_at.month = now.month' do='each' join=', ' do='show' attr='title'/>"
  res: "Art, projects list"

this_year:
  # date set in ZafuCompilerTest
  old_src: "<r:pages in='site' event='year' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:pages in='site' where='event_at.year = now.year' do='each' join=', ' do='show' attr='title'/>"
  res: "Art, projects list"

date_select:
  context:
    visitor: tiger
  old_src: "<r:date select='2006-04-05'><r:nodes in='site' log='current' do='each' join=', ' do='show' attr='title'/>"
  src: "<r:void set_strdate='\"2006-04-05\"'><r:nodes where='log_at.day eq #{strdate}' in='site' do='each' join=', ' do='title'/></r:void>"
  res: "Proposition, zena enhancements"

empty_list:
  context:
    class: Project
  src: "<ul do='hot'>blah</ul><r:hot><ul>bib</ul></r:hot>"
  res: ""

order_limit:
  context:
    node: 'zena'
  src: "<ul do='news' in='site' limit='5' order='updated_at desc'><li do='each'><r:link/></li></ul>"
  res: "<ul><li><a href='/en/projects-list/Clean-Water-project/post27.html'>parc opening</a></li></ul>"

relation_not_in_current_node:
  src: "<ul do='news' in='site' limit='5' order='updated_at desc'><li do='each'><r:link/></li></ul>"
  res: "<ul><li><a href='/en/projects-list/Clean-Water-project/post27.html'>parc opening</a></li></ul>"

pages_anchor:
  src: "<r:pages in='site' limit='3' do='each' join=', '><r:show attr='title' anchor='true'/></r:pages>"
  res: "<a class='anchor' name='node29'></a>a wiki with Zena, <a class='anchor' name='node33'></a>Art, <a class='anchor' name='node21'></a>Clean Water project"

projects_in_site:
  src: "<div class='all_projects' do='projects' in='site'><r:each join=', ' do='show' attr='title'/></div>"
  res: "<div class='all_projects'>a wiki with Zena, Clean Water project, Zena the wild CMS</div>"

projects:
  src: "<r:projects in='site'><r:each join=', ' do='show' attr='title'/></r:projects>"
  res: "a wiki with Zena, Clean Water project, Zena the wild CMS"

nodes:
  src: "<r:nodes in='project'><r:each join=', ' do='show' attr='title'/></r:nodes>"
  res: "it's a lake, Keeping things clean !, Lake Tanganyika, parc opening, status title, water"

menu_with_favorites:
  context:
    visitor: ant
  src: "<ul><r:root do='pages' only='public' cache='true' name='menu'><li do='each'><r:link/><ul do='pages'><li do='each' do='link'/></ul></li></r:root><r:visitor_node do='favorites'><li class='favorites'><r:trans>favorites</r:trans><ul><li do='each' do='link'/></ul></li></ul>"
  res: "/.*tag33.*tag35.*Clean Water.*favorites.*Nature/"

visitor_favorites:
  context:
    visitor: ant
  old_src: "<r:node select='visitor'><ul do='favorites'><li do='each' do='link'/></ul></r:node>"
  src: "<r:visitor_node><ul do='favorites'><li do='each' do='link'/></ul></r:visitor_node>"
  res: "<ul><li><a href='/oo/page39.html'>Nature</a></li></ul>"

checkbox:
  src: "<r:checkbox role='hot_for' nodes='projects' in='site'/>"
  res: "/<input type='checkbox' name='node\[hot_for_ids\]\[\]' value='21' checked='checked'\/> <span>Clean Water project</span>/"

checkbox_unique:
  src: "<r:checkbox role='icon' nodes='images' in='site'/>"
  tem: '/make_checkbox/'
  res: "/<input type='radio' name='node\[icon_id\]' value='30'/> <span>bird</span>/"

direction_both:
  src: "<r:references or='reference_for' do='each' join=', ' do='title'/>"
  res: "Art, projects list"

direction_both_self_auto_ref:
  src: "<r:references or='reference_for' do='each' join=', ' do='title'/>"
  res: "Art, projects list, status title"

direction_both_else:
  src: "<r:references direction='both' else='[parent]' do='each' join=', ' do='title'/>"
  res: "Clean Water project"

visitor_node:
  src: "<r:visitor_node><b do='title'/></r:visitor_node>"
  res: "<b>Mr nobody</b>"

relation_or_other:
  src: "<ul do='posts' in='project' or='references' order='log_at desc' limit='8'>"
  # should build a valid SQLiss query
  tem: "/\) OR \(.*\)\) GROUP BY nodes.id ORDER BY nodes.log_at DESC LIMIT 8/"

relation_in_site:
  src: "<r:tagged in='site' limit='10' do='each' join=',' do='title'/>"
  res: "Clean Water project,parc opening"

relation_in_site_find_first:
  src: "<r:tagged find='first' in='site' do='title'/>"
  res: "Clean Water project"

where:
  src: "<r:tagged where=\"id = 27\" in='site' do='each' join=',' do='id'/>"
  res: "27"

where_like:
  src: "<r:images where='title like \"%ke\"' in='site' do='each' join=',' do='title'/>"
  res: "it's a lake"

else:
  src: "<r:nodes where='id = 1' in='site' else='[this]' do='each' join=',' do='title'/>"
  tem: "/ false\) || \[@node\]\)/"
  res: "status title"

incompatible_else:
  src: "<r:letters where='id = 1' in='site' else='this' do='each' join=',' do='title'/>"
  tem: "/Incompatible.*\(Node\).*finder \(\[Letter\]\)/"

where_not:
  context:
    node: 'cleanWater'
  src: "<r:nodes where='title ne \"status title\"' do='each' join=',' do='title'/>"
  res: "it's a lake,Keeping things clean !,Lake Tanganyika,parc opening,water"

where_two_attributes:
  src: "<r:nodes where='log_at ne event_at' in='site' do='each' join=', ' do='title'/>"
  tem: "/nodes.log_at <> nodes.event_at/"
  res: "parc opening, zena enhancements"

many_or:
  src: "<r:tagged in='site' or='images in site' or='tags in site' do='each' join=',' do='title'/>"
  res: "Art,bird,Clean Water project,flower,it's a lake,News list,parc opening,Top menu"

hot_or_page:
  context:
    class: Project
  src: "<r:hot or='page in project'>...</r:hot>"
  tem: "/:first.*.*links.relation_id = _ID(project_has_a_hot_element).*nodes.kpath LIKE 'NP%' AND nodes.project_id = ?.*LIMIT 1.*@node.get_project_id"

node_in_version:
  src: "<r:version><r:node do='title'/></r:version>"
  res: "status title"

where_with_param:
  src: "<r:nodes where='title like \"%#{params[:t]}%\"' in='site'/>"
  tem: "/ml1.value LIKE \?.*\"%\#\{params\[:t\]\}%\"/"

group_by_secret_project:
  context:
    visitor: ant
  src: "<r:pages where='title like \"t%\"' in='site' order='title ASC' do='group' by='project'><b do='project' do='title'/>: <r:each join=',' do='title'/></r:pages>"
  res: ": Talk<b>Zena the wild CMS</b>: Top menu"

group_by_project:
  context:
    visitor: lion
  src: "<r:notes in='site' order='title ASC' do='group' by='project'><b do='project' do='title'/>: <r:each join=',' do='title'/></r:notes>"
  res: "<b>Clean Water project</b>: parc opening<b>Secret</b>: Proposition<b>Zena the wild CMS</b>: zena enhancements"

group_by_project_sort_zip:
  context:
    visitor: ant
  old_src: "<r:images in='site' order='title ASC' do='group' by='project' sort='zip'><b do='project' do='title'/>: <r:each join=',' do='title'/></r:images>"
  src: "<r:images in='site' order='zip ASC' do='group' by='project' sort='id'><b do='project' do='title'/>: <r:each join=',' do='title'/></r:images>"
  res: "<b>Clean Water project</b>: it's a lake<b>a wiki with Zena</b>: bird,flower<b>Zena the wild CMS</b>: Autumn Tree"

group_by_parent_sort:
  src: "<r:images in='site' order='title ASC' do='group' by='parent' sort='title'><b do='parent' do='title'/>: <r:each join=',' do='title'/></r:images>"
  res: "<b>a wiki with Zena</b>: bird,flower<b>Clean Water project</b>: it's a lake"

nodes_in_site_group_by_year:
  old_src: "<r:nodes in='site' group='log_at:year' order='log_at:year asc, title ASC' do='each' join=', '><r:show attr='log_at' format='%Y'/></r:nodes>"
  src: "<r:nodes in='site' group='log_at.year' order='log_at.year asc, title ASC' do='each' join=', '><r:show attr='log_at' format='%Y'/></r:nodes>"
  res: ", 2006, 2007"

find_by_zip:
  src: "<div do='find(30)' do='img'/>"
  res: '/image30_std.jpg/'

find_count:
  context:
    node: 'cleanWater'
  src: "<div do='count(\"nodes\")'/>"
  res: '<div>6</div>'

same_name_as_class:
  # we create a relation with 'page' role from Letter.
  src: "<r:Letter? do='pages'/>"
  tem: '/nodes.id = links.source_id AND links.relation_id/'

start:
  src: "<r:start do='title'/>"
  tem: "<% var1 = start_node %><%= var1.prop['title'] %>"
  res: 'status title'

foo:
  context:
    node: art
  src: "<div do='tagged from tag:start' do='each' join=', ' do='title'/>"
  tem: "/nodes.id = links.source_id/"
  res: '<div>Clean Water project, parc opening</div>'

final_class:
  context:
    node: cleanWater
  # Only projects (calendars) have a 'hot' relation
  src: "<div do='calendars from notes' do='each' do='hot' do='link'/>"
  tem: "!/unknown method/"

count:
  src: "<p do='nodes in site order by id' find='count'/>"
  tem: "<p><%= Node.do_find(:count, %Q{SELECT COUNT(*) FROM nodes WHERE #{secure_scope('nodes')}}) %></p>"
  res: "<p>42</p>"

query_in_array:
  src: "<div do='posts' do='find(\"posts in site\")'/>"
  tem: "/Node\.do_find.*Node\.do_find"

query_in_array_without_find:
  src: "<div do='posts' do='posts in site'/>"
  tem: "/Node\.do_find.*Node\.do_find"