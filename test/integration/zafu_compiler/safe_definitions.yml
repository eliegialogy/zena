default:
  context:
    lang: 'en'
    visitor: 'ant'
    node: 'status'
  src: "simple text"
  tem: "simple text"
  res: "simple text"

params:
  context:
    d: 'hello ladies'
  old_src: "<i do='show' param='d'/>"
  src: "<i do='params[:d]'/>"
  tem: "<i><%= params[:d] %></i>"
  res: "<i>hello ladies</i>"

string_gsub:
  context:
    node: 'tiger'
  old_src: "<r:Contact? do='addres.gsub(/\\n/,\";\";')'/>"
  src: "<r:Contact? do='eval'>address.gsub(/\\n/, ';')</r:Contact?>"
  tem: "<% if @node.kpath_match?('NRC') %><%= (@node.prop['address'] ? @node.prop['address'].gsub(/\\n/, \";\") : nil) %><% end %>"
  res: "Small Island;In the Wild"

string_gsub_static:
  context:
    lang: 'fr'
  src: "<r:eval>trans('fr').gsub(/\\Af/, 'F')</r:eval>"
  tem: "Fran√ßais"

string_gsub_newline:
  context:
    node: 'tiger'
  src: "<r:Contact? do='address.gsub(/\\n/, \"\\\\n\")'/>"
  res: 'Small Island\nIn the Wild'

string_upcase:
  eval: "title.upcase"
  tem: "<%= (@node.prop['title'] ? @node.prop['title'].upcase : nil) %>"
  res: "STATUS TITLE"

string_strip:
  eval: "%Q{ #{id}}.strip"
  tem: "<%= \" #{@node.zip}\".strip %>"
  res: "22"

string_to_i:
  eval: "%Q{ #{id}}.to_i"
  tem: "<%= \" #{@node.zip}\".to_i %>"
  res: "22"

string_to_json:
  eval: "title.to_json"
  res: '"status title"'

nil_to_json:
  eval: "weight.to_json"
  res: 'null'

number_to_json:
  eval: "id.to_json"
  res: '22'

blank:
  eval: 'this.blank?'
  tem:  "<%= @node.blank? %>"

blank_on_string:
  eval: 'id.blank?'
  tem:  "<%= @node.zip.blank? %>"

blank_on_could_be_nil:
  eval: 'parent.blank?'
  tem:  "<%= @node.parent.blank? %>"

now:
  eval: 'now'
  tem: "<%= Time.now %>"

now_format:
  src: "rendering at: <r:show eval='now' format='%d.%m.%Y %H:%M:%S'/>"
  tem: "/rendering at: .*Time.now/"
  res: "/rendering at: \d/"

kind_of_class:
  eval: "kind_of?(Image)"
  tem: "<%= @node.kpath_match?('NDI') %>"

kind_of_role:
  eval: "kind_of?(Original)"
  tem: "<%= @node.has_role?(493147733) %>"

map_join:
  context:
    node: 'cleanWater'
  src: "<r:children do='map(\"title\").join(\",\")'/>"
  tem: "/var1.map\{\|_map_obj\| _map_obj.prop\['title'\]\}/"
  res: "crocodiles,it's a lake,The lake we love,parc opening,status title,water"

sum:
  context:
    node: 'cleanWater'
  src: "<r:children do='sum(\"created_at.to_i\")'/>"
  tem: "/var1.map\{\|_sum_obj\| _sum_obj.created_at.to_i.to_f\}.reduce\(:\+\)/"
  res: "6854457600.0"

map_on_can_be_nil:
  context:
    node: 'cleanWater'
  eval: "Contact.relations.map(:name).join('-')"
  tem: "/VirtualClass\[\"Contact\"\] \? VirtualClass\[\"Contact\"\].all_relations.map\(&:other_role\).compact.join\(\"-\"\)/"
  res: "/collaborator_for-favorite-favorite_for/"

min:
  context:
    h: 10
    w: 0.1
  src: "<r:show format='%.2f CHF' eval='params[:h].to_f * min(0.25, params[:w].to_f)'/>"
  res: "1.00 CHF"

max:
  context:
    h: 10
    w: 0.1
  src: "<r:show format='%.2f CHF' eval='params[:h].to_f * max(0.25, 10 * params[:w].to_f)'/>"
  res: "10.00 CHF"

time_advance:
  context:
    date: '2011-02-03'
  src: "<b do='date.advance(:months =&gt; 1).strftime(\"%Y-%m-%d\")'/>"
  res: "<b>2011-03-03</b>"

time_blank:
  eval: "date.blank?"
  tem: "<%= main_date.blank? %>"

array_include:
  src: "<b do='[1,2,3].include?(2)'/>"
  tem: "<% if [1,2,3].include?(2) %><b></b><% end %>"

hash_to_params:
  context:
    q:
      one: '1'
      two: '2'
  src: "<b do='{:q =&gt; params[:q]}' do='to_param'/>"
  tem: "<% var1 = {:q => params[:q]} %><b><%= var1.to_param %></b>"
  res: '<b>q%5Bone%5D=1&q%5Btwo%5D=2</b>'
